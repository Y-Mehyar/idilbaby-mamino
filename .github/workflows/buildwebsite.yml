name: Build Catalog Website

on:
  push:
    paths:
      - "products.csv"
      - "docs/images/**"
      - "docs/logo.png"
      - ".github/workflows/build-website.yml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install pandas

    - name: Generate index.html
      run: |
        python << 'EOF'
        import pandas as pd
        from pathlib import Path

        df = pd.read_csv("products.csv")
        output = Path("docs/index.html")

        html = """
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="UTF-8">
          <title>IdilBaby Catalog</title>
          <style>
            body {
              font-family: 'Segoe UI', sans-serif;
              margin: 0;
              background: #f6f6f6;
              padding: 20px;
            }
            header {
              text-align: center;
              margin-bottom: 30px;
            }
            header img {
              max-height: 80px;
              margin-bottom: 10px;
            }
            header h1 {
              margin: 0;
              font-size: 2rem;
              color: #444;
            }
            .search {
              text-align: center;
              margin: 20px 0;
            }
            .search input {
              width: 80%;
              max-width: 400px;
              padding: 10px;
              font-size: 1rem;
              border-radius: 8px;
              border: 1px solid #ccc;
            }
            .grid {
              display: grid;
              grid-template-columns: repeat(4, 1fr);
              gap: 20px;
            }
            @media (max-width: 768px) {
              .grid {
                grid-template-columns: repeat(2, 1fr);
              }
            }
            .card {
              background: white;
              border-radius: 10px;
              overflow: hidden;
              box-shadow: 0 2px 8px rgba(0,0,0,0.05);
              cursor: pointer;
              transition: transform 0.2s;
            }
            .card:hover {
              transform: translateY(-4px);
            }
            .card img {
              width: 100%;
              height: 250px;
              object-fit: contain;
              background: white;
              padding: 10px;
}
            .card-body {
              padding: 10px;
            }
            .name {
              font-weight: bold;
              font-size: 1rem;
              color: #333;
              margin-bottom: 4px;
            }
            .sku {
              font-size: 0.85rem;
              color: #888;
              margin-bottom: 4px;
            }
            .price {
              color: #00704A;
              font-weight: bold;
              font-size: 0.95rem;
              margin-bottom: 2px;
            }
            .stock {
              font-size: 0.85rem;
              color: #777;
            }
            .modal {
              display: none;
              position: fixed;
              z-index: 10;
              left: 0; top: 0;
              width: 100%; height: 100%;
              background: rgba(0, 0, 0, 0.7);
              justify-content: center;
              align-items: center;
            }
            .modal-content {
              background: #fff;
              padding: 20px;
              max-width: 90%;
              max-height: 90%;
              overflow: auto;
              border-radius: 10px;
              position: relative;
            }
            .modal-content h2 {
              margin-top: 0;
            }
            .modal-content img {
              width: 100%;
              max-height: 300px;
              object-fit: contain;
              margin-bottom: 10px;
            }
            .close {
              position: absolute;
              top: 10px; right: 15px;
              font-size: 20px;
              cursor: pointer;
              color: #333;
            }
          </style>
        </head>
        <body>
          <header>
            <img src="logo.png" alt="Logo">
            <h1>IdilBaby Mamino Products</h1>
          </header>

          <div class="search">
            <input type="text" placeholder="Search by name or SKU..." oninput="filterProducts(this.value)">
          </div>

          <div class="grid" id="productGrid">
        """

        for _, row in df.iterrows():
            sku = str(row["sku"])
            name = row.get("name", "Unnamed")
            price = row.get("price", "N/A")
            stock = row.get("inventory", "N/A")
            urls = [u.strip() for u in str(row.get("image_urls", "")).split(",") if u.strip()]
            image = f"images/{sku}_1.jpg" if urls else "https://via.placeholder.com/300"
            modal_id = f"modal_{sku}"
            all_imgs = "".join([f'<img src="images/{sku}_{i+1}.jpg" alt="{name}">' for i in range(len(urls))])

            html += f'''
            <div class="card" onclick="showModal('{modal_id}')">
              <img src="{image}" alt="{name}">
              <div class="card-body">
                <div class="name">{name}</div>
                <div class="sku">SKU: {sku}</div>
                <div class="price">{price} JOD</div>
                <div class="stock">{stock} in stock</div>
              </div>
            </div>

            <div class="modal" id="{modal_id}">
              <div class="modal-content">
                <span class="close" onclick="hideModal('{modal_id}')">&times;</span>
                <h2>{name}</h2>
                {all_imgs or "<p>No additional images available.</p>"}
              </div>
            </div>
            '''

        html += """
          </div>

          <script>
            function showModal(id) {
              document.getElementById(id).style.display = 'flex';
            }
            function hideModal(id) {
              document.getElementById(id).style.display = 'none';
            }
            function filterProducts(query) {
              const cards = document.querySelectorAll('.card');
              query = query.toLowerCase();
              cards.forEach(card => {
                const name = card.querySelector('.name').innerText.toLowerCase();
                const sku = card.querySelector('.sku').innerText.toLowerCase();
                card.style.display = (name.includes(query) || sku.includes(query)) ? 'block' : 'none';
              });
            }
          </script>
        </body>
        </html>
        """

        output.write_text(html)
        EOF

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
